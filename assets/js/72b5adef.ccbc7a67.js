"use strict";(self.webpackChunkdiscord_casestudy=self.webpackChunkdiscord_casestudy||[]).push([[498],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return m}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),c=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,g=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return r?t.createElement(g,o(o({ref:n},s),{},{components:r})):t.createElement(g,o({ref:n},s))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1632:function(e,n,r){r.r(n),r.d(n,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var t=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={},u="Performance",c={unversionedId:"engineering/performance",id:"engineering/performance",title:"Performance",description:"Discord legt sehr gro\xdfen Wert auf Permormance.",source:"@site/docs/engineering/performance.md",sourceDirName:"engineering",slug:"/engineering/performance",permalink:"/discord-casestudy/docs/engineering/performance",editUrl:"https://github.com/xeeija/discord-casestudy/edit/main/docs/engineering/performance.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Engineering",permalink:"/discord-casestudy/docs/engineering/architecture"},next:{title:"Architektur von Teamspeak",permalink:"/discord-casestudy/docs/discord-vs-teamspeak/architecture-teamspeak"}},s={},d=[{value:"Allgemein",id:"allgemein",level:2},{value:"Mobile",id:"mobile",level:2}],p={toc:d};function m(e){var n=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"performance"},"Performance"),(0,a.kt)("p",null,"Discord legt sehr gro\xdfen Wert auf Permormance.\nDie Philosophie priorisiert eher eine gute und stabile Performance \xfcber neuen oder experimentellen Features."),(0,a.kt)("h2",{id:"allgemein"},"Allgemein"),(0,a.kt)("p",null,"Gute Performance und Responsiveness erreicht Discord in der Desktop Anwendung und der Webanwendung unter anderem durch ",(0,a.kt)("strong",{parentName:"p"},"Code Splitting"),".\nCode splitting wird realisiert durch Webpack, ein Tool das Programmcode in einzelne Dateien b\xfcndelt, indem unterschiedliche Inhalte in verschiedenen Chunks gespeichert sind, die bei nur bei Bedarf geladen werden."),(0,a.kt)("p",null,"Das hat einige Vorteile:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"schnellere Startzeit und Ladezeiten "),(0,a.kt)("li",{parentName:"ul"},"M\xf6glichkeit f\xfcr neue Features, ohne Einfluss auf die Performace"),(0,a.kt)("li",{parentName:"ul"},"verschiedene Sprachen (I18n)")),(0,a.kt)("p",null,"Die M\xf6glichkeit, beliebig viele Sprachen hinzuzuf\xfcgen und Features nur bei Bedarf zu laden tr\xe4gt damit zu Usability bei.\nAu\xdferdem wird die \xc4nderung/Verbesserung von individuellen Features vereinfacht, da im besten Fall nur nur einzelne oder einige wenige betroffene Chunks ge\xe4ndert werden."),(0,a.kt)("h2",{id:"mobile"},"Mobile"),(0,a.kt)("p",null,"Da Discord gro\xdfe Teile ihrer Codebasis f\xfcr alle Platformen verwendet, sind einige Optimierungen wie Code Splitting auch f\xfcr mobile Platformen anwendbar.\nZus\xe4tzlich zur Web- bzw. Desktopanwendung gibt es f\xfcr die mobile Anwendung noch ein paar weitere Faktoren, die ber\xfccksichtig werden m\xfcssen:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"schw\xe4chere/begrenzte Leistung"),(0,a.kt)("li",{parentName:"ul"},"Batterieverbrauch"),(0,a.kt)("li",{parentName:"ul"},"gr\xf6\xdfere Vielfalt an Ger\xe4ten")),(0,a.kt)("p",null,"Aufgrund der gr\xf6\xdferen Vielfalt an Ger\xe4ten, wird die Anwendung f\xfcr \xe4ltere Ger\xe4te entwickelt und optimiert, dass es bei einem Gro\xdfteil der Benutzer keine Performanceeinbu\xdfen gibt."),(0,a.kt)("p",null,"Da die mobile Anwendung auf React Native als Framework basiert, sind auch viele der Optimierungen spezifisch f\xfcr React Native. Dazu geh\xf6ren  in der Handhabung der Daten, z.B. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rechenintensive Aufgaben m\xf6glichst zu vermeiden bzw. zu cachen, wie die Optimierung und Erstellung von regul\xe4ren Ausdr\xfccken (Regex)"),(0,a.kt)("li",{parentName:"ul"},"Benutzerdaten nur dort zu laden, wo sie ben\xf6tigt werden, um nicht unn\xf6tig viele Teile des User Interface neuzuladen")),(0,a.kt)("p",null,"oder die Optimierung der React-Native Komponenten, aus denen das User Interface besteht. Einige Optimierungen dieser Komponenten sind:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Updates und Rendern als Batch, in sog. "Commit Passes"'),(0,a.kt)("li",{parentName:"ul"},"Komponenten die sich nicht \xe4ndern nicht neuzuladen"),(0,a.kt)("li",{parentName:"ul"},"lange Listen nicht unn\xf6tig oft zu sortieren"),(0,a.kt)("li",{parentName:"ul"},"eine spezielle Listen-Implementation, die nur soviele Resourcen ben\xf6tigt, wie Eintr\xe4ge auf dem Bildschirm Platz haben, und nicht Resourcen f\xfcr alle Eintr\xe4ge der Liste reserviert")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Quellen:",(0,a.kt)("br",{parentName:"em"}),"How Discord Maintains Performance While Adding Features, Michael Greer: ",(0,a.kt)("a",{parentName:"em",href:"https://discord.com/blog/how-discord-maintains-performance-while-adding-features"},"https://discord.com/blog/how-discord-maintains-performance-while-adding-features"),(0,a.kt)("br",{parentName:"em"}),"How Discord achieves native iOS performance with React Native, Miguel Gaeta: ",(0,a.kt)("a",{parentName:"em",href:"https://discord.com/blog/how-discord-achieves-native-ios-performance-with-react-native"},"https://discord.com/blog/how-discord-achieves-native-ios-performance-with-react-native"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Autor: Bastian")))}m.isMDXComponent=!0}}]);